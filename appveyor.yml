version: '{branch}-{build}'

# Skipping commits affecting specific files (GitHub only).
skip_commits:
  files:
    - README.md

image: Visual Studio 2013

# called before clone
init:
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - echo %Configuration%
  - if "%Configuration%"=="Debug"   (set config=debug)
  - if "%Configuration%"=="Release" (set config=release)
  - echo %APPVEYOR_BUILD_WORKER_IMAGE%
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set generator="Visual Studio 15 2017 Win64" )
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" ( set generator="Visual Studio 14 2015 Win64" )
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2013" ( set generator="Visual Studio 12 2013 Win64" )
  - ps: if ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2017") {$env:psgenerator = "Visual Studio 15 2017 Win64"}
  - ps: if ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2015") {$env:psgenerator = "Visual Studio 14 2015 Win64"}
  - ps: if ($env:APPVEYOR_BUILD_WORKER_IMAGE -eq "Visual Studio 2013") {$env:psgenerator = "Visual Studio 12 2013 Win64"}

  - echo %generator%

configuration:
#  - Debug
  - Release

matrix:
  fast_finish: true

# Note mkdir is from Git (C:\Program Files\Git\usr\bin\mkdir.exe)
# It might give unexpected results (use md instead)
before_build:
  - call C:\Qt\5.5\msvc2013_64\bin\qtenv2.bat
  - call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86_amd64
  - cd %APPVEYOR_BUILD_FOLDER%
  - curl -L -O https://github.com/i-RIC/iricdev/archive/master.zip
  - cd \
  - 7z x %APPVEYOR_BUILD_FOLDER%\master.zip
  - del %APPVEYOR_BUILD_FOLDER%\master.zip
  - cd \iricdev-master
  - md lib
  - cd lib
  - ps: (New-Object Net.WebClient).DownloadFile("https://ci.appveyor.com/api/projects/i-RIC/iricdev/artifacts/lib/install.zip?branch=master&job=Configuration:+Debug", "\iricdev-master\lib\install-Debug.zip")
  - ps: (New-Object Net.WebClient).DownloadFile("https://ci.appveyor.com/api/projects/i-RIC/iricdev/artifacts/lib/install.zip?branch=master&job=Configuration:+Release", "\iricdev-master\lib\install-Release.zip")
  - md install
  - cd install
  - 7z x -aoa ..\install-Debug.zip
  - 7z x -aoa ..\install-Release.zip
  - cd \iricdev-master
  - call create-files.cmd
  - cd %APPVEYOR_BUILD_FOLDER%
  - if not exist libdlls (md libdlls)
  - if not exist libdlls\Debug (md libdlls\Debug)
  - if not exist libdlls\Release (md libdlls\Release)
  - copy /y \iricdev-master\paths.pri .
  - copy /y \iricdev-master\dirExt.prop .\tools\data\.
  - qmake -recursive -tp vc

build_script:
  - echo msbuild /nologo /verbosity:minimal /p:Configuration=%Configuration% src.sln

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%\tools
  - set SAVE_PATH=%PATH%
  - set PATH=C:\Python37-x64;%PATH%
  - python copydllsExt.py
  - set PATH=%SAVE_PATH%
  - cd %APPVEYOR_BUILD_FOLDER%
  - ps: |
      if ($env:APPVEYOR_REPO_BRANCH -eq "auto-dev" -AND $env:Configuration -eq "Release") {
        md $env:APPVEYOR_BUILD_FOLDER\dist\_build
        Set-Location $env:APPVEYOR_BUILD_FOLDER\dist\_build
        cmake --version
        echo cmake -DPREPOST_GUI:PATH=$env:APPVEYOR_BUILD_FOLDER -G "$env:psgenerator" ..
        cmake -DPREPOST_GUI:PATH=$env:APPVEYOR_BUILD_FOLDER -G "$env:psgenerator" ..
        msbuild /nologo /verbosity:minimal /p:Configuration=Release INSTALL.vcxproj
      }

#artifacts:
#  - path: libdlls\$(Configuration)
#    name: libdlls-$(Configuration)
#  - path: apps\iricgui\$(config)
#    name: iricgui-$(Configuration)

on_success:
  - ps: |
      if ($env:APPVEYOR_REPO_BRANCH -eq "auto-dev" -AND $env:Configuration -eq "Release") {
        Write-Output "This is the Release of the auto-dev branch"
        Set-Location \
        git clone -q --branch=master https://github.com/i-RIC/online_update.git
        Set-Location .\online_update
        git checkout -qf master
        $v=(Select-String -Path dev_src\packages\gui.prepost\meta\package.xml -Pattern "(?<=<Version>)(.*)(?=</Version>)").Matches.Value -split "\."
        $v[3] = 1 + $v[3]
        $env:VERSION = $v -join "."
        $tokyo_tz = [System.TimeZoneInfo]::FindSystemTimeZoneById("Tokyo Standard Time")
        $tokyo_date = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $tokyo_tz)
        $env:RELEASE_DATE = $(Get-Date $tokyo_date -Format s).Substring(0,10)
        $env:RELEASE = $env:RELEASE_DATE -replace '-', '.'
        $env:CAPTION = "iRIC GUI " + $v[0] + "." + $v[1] + "." + $v[2]
        $files=@('dev_src\packages\gui.prepost\data\definition.xml', `
                 'dev_src\packages\gui.prepost\meta\package.xml')
        foreach ($file in $files) {
          (Get-Content $file) | Foreach-Object {
            $_ -replace "(?<=<Version>)(.*)(?=</Version>)",           "$env:VERSION" `
               -replace "`" version=`"([^`"]*)`"",                    "`" version=`"$env:VERSION`"" `
               -replace "(?<=<ReleaseDate>)(.*)(?=</ReleaseDate>)",   "$env:RELEASE_DATE" `
               -replace "release=`"([^`"]*)`"",                       "release=`"$env:RELEASE`"" `
               -replace "caption=`"([^`"]*)`"",                       "caption=`"$env:CAPTION`"" `
               -replace "github-sha1=`"([^`"]*)`"",                   "github-sha1=`"$env:APPVEYOR_REPO_COMMIT`""
          } | Set-Content $file
        }
        git diff
      }
